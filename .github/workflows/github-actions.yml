name: run-unit-tests
run-name: ${{ github.actor }} is running unit tests
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.5"
      - run: pip install -r gameserver/requirements.txt
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/common" >> $GITHUB_ENV
      - run: cd gameserver; python -m unittest tests.unittest_gameserver
      - run: cd imageserver; python -m unittest tests.unittest_imageserver
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}"
          file: "gameserver/Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gameserver:latest
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     # checkout the repo
  #     - name: "Checkout GitHub Action"
  #       uses: actions/checkout@v4
  #     - name: "Login via Azure CLI"
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     #- name: 'Login to Docker Hub'
  #     #  uses: docker/login-action@v3
  #     #with:
  #     #  username: ${{ secrets.DOCKERHUB_USERNAME }}
  #     #  password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: "Deploy to Azure Container Instances"
  #       uses: "azure/aci-deploy@v1"
  #       with:
  #         name: jaysgame
  #         resource-group: jay
  #         dns-name-label: jaysgame
  #         image: jayjuk/gameserver #:${{ github.sha }}
  #         cpu: 1 #Optional
  #         memory: 0.1 #Optional
  #         #registry-username: ${{ secrets.REGISTRY_USERNAME }}
  #         #registry-password: ${{ secrets.REGISTRY_PASSWORD }}
  #         location: "west europe"
  #         secure-environment-variables: OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
  #         environment-variables: AI_COUNT="0" #TODO - make this dynamic
